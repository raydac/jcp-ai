[
  {
    "instant": "2025-08-09T17:23:14.184343753Z",
    "key": "MKuW98l8zPDOsVPhn20yxMys+bLaUKDzf9ogIuKb3gPPnSBZbHXhXvCpSKt8SgWf2p589v8pLmgNzKVBjuCNxTgzWnzc+KRCCsb8iVCr7Bo=",
    "fileName": "ArraySorter.java",
    "line": 6,
    "result": "/**\n * Sorts an array of integers in ascending or descending order using an optimized\n * quicksort algorithm with minimal memory overhead. The method prioritizes speed\n * and implements sorting in-place where possible, only creating a new array when\n * the input is valid for sorting.\n *\n * @param array the array to be sorted, may be null or empty\n * @param asc   true for ascending order, false for descending order\n * @return the sorted array, or the original array if it is null, empty, or has only one element\n */\npublic static int[] fastSort(final int[] array, final boolean asc) {\n    if (array == null || array.length <= 1) {\n        return array;\n    }\n\n    int[] result = new int[array.length];\n    System.arraycopy(array, 0, result, 0, array.length);\n\n    int low = 0;\n    int high = result.length - 1;\n    int stack[] = new int[high - low + 1];\n    int top = -1;\n\n    stack[++top] = low;\n    stack[++top] = high;\n\n    while (top >= 0) {\n        high = stack[top--];\n        low = stack[top--];\n\n        int pivot = result[high];\n        int i = (low - 1);\n\n        for (int j = low; j < high; j++) {\n            boolean condition = asc ? result[j] <= pivot : result[j] >= pivot;\n            if (condition) {\n                i++;\n                int temp = result[i];\n                result[i] = result[j];\n                result[j] = temp;\n            }\n        }\n\n        int temp = result[i + 1];\n        result[i + 1] = result[high];\n        result[high] = temp;\n\n        int p = i + 1;\n\n        if (p - 1 > low) {\n            stack[++top] = low;\n            stack[++top] = p - 1;\n        }\n\n        if (p + 1 < high) {\n            stack[++top] = p + 1;\n            stack[++top] = high;\n        }\n    }\n\n    return result;\n}",
    "sinceUse": 0
  }
]