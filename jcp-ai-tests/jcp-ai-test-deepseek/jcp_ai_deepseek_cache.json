[
  {
    "uuid": "72b00cd6-c5bc-46a7-ad6b-a33ff4e21b7c",
    "instant": "2025-08-02T07:57:15.839681315Z",
    "key": "WoD69/EHi1cXAccgJjN3vSHLBTIMLoK8DmiJawDDebG8fUN52bfPZkDfELXz2oIy/lMElsJcvBHcxdRXh+6LWtDq7QbDGeyoxKfVSuHVTs8=",
    "fileName": "ArraySorter.java",
    "line": 6,
    "result": "/**\n * Sorts the given array using a highly efficient in-place sorting algorithm (quicksort variant)\n * with minimal memory overhead. The sorting order is determined by the asc parameter.\n * \n * @param array the array to be sorted, may be null or empty\n * @param asc if true sorts in ascending order, otherwise in descending order\n * @return the sorted array (new array if input had multiple elements), or original array if null/empty/single-element\n */\npublic static int[] fastSort(final int[] array, final boolean asc) {\n    if (array == null || array.length <= 1) {\n        return array;\n    }\n    java.util.Random rand = new java.util.Random();\n    int low = 0;\n    int high = array.length - 1;\n    int[] stack = new int[high - low + 1];\n    int top = -1;\n    stack[++top] = low;\n    stack[++top] = high;\n    while (top >= 0) {\n        high = stack[top--];\n        low = stack[top--];\n        int pivot = array[low + rand.nextInt(high - low + 1)];\n        int i = low;\n        int j = high;\n        while (i <= j) {\n            if (asc) {\n                while (array[i] < pivot) i++;\n                while (array[j] > pivot) j--;\n            } else {\n                while (array[i] > pivot) i++;\n                while (array[j] < pivot) j--;\n            }\n            if (i <= j) {\n                int temp = array[i];\n                array[i] = array[j];\n                array[j] = temp;\n                i++;\n                j--;\n            }\n        }\n        if (low < j) {\n            stack[++top] = low;\n            stack[++top] = j;\n        }\n        if (i < high) {\n            stack[++top] = i;\n            stack[++top] = high;\n        }\n    }\n    return array;\n}",
    "sinceUse": 0
  }
]