[
  {
    "uuid": "e007f598-07e2-46b7-b115-1bc3ff2354a2",
    "instant": "2025-08-01T22:55:34.827699654Z",
    "key": "tBeMqvVnM5QcBjUZ/+TxUZ6Fl+/Mojpm7a+Nw6rseeIua7lxs8DAJtOsc4M7um0lgBrmDWVfckUOuhfeVo2rLvc7R4KnHfmNwLY/CnFovNs=",
    "fileName": "ArraySorter.java",
    "line": 6,
    "result": "/**\n * Sorts the input array using an optimized quicksort algorithm with minimal memory overhead.\n * The sorting order is determined by the asc flag (ascending if true, descending if false).\n * Returns the original array if it is null, empty, or contains a single element.\n * Otherwise, returns a new sorted array.\n\n * @param array the array to be sorted\n * @param asc   flag indicating sorting order (true for ascending, false for descending)\n * @return sorted array or original array if no sorting needed\n */\npublic static int[] fastSort(final int[] array, final boolean asc) {\n    if (array == null || array.length <= 1) {\n        return array;\n    }\n    int[] result = java.util.Arrays.copyOf(array, array.length);\n    java.util.Arrays.sort(result);\n    if (!asc) {\n        for (int i = 0; i < result.length / 2; i++) {\n            int temp = result[i];\n            result[i] = result[result.length - 1 - i];\n            result[result.length - 1 - i] = temp;\n        }\n    }\n    return result;\n}",
    "sinceUse": 0
  }
]