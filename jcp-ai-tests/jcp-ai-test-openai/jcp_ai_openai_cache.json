[{
  "uuid": "ec13fee4-2854-478c-820f-6149d6e62f59",
  "instant": "2025-08-01T22:23:49.287266841Z",
  "key": "tBeMqvVnM5QcBjUZ/+TxUZ6Fl+/Mojpm7a+Nw6rseeIua7lxs8DAJtOsc4M7um0lgBrmDWVfckUOuhfeVo2rLvc7R4KnHfmNwLY/CnFovNs=",
  "fileName": "ArraySorter.java",
  "line": 6,
  "result": "/**\n * Sorts the given array of integers using an in-place iterative quicksort for maximal speed and minimal memory overhead.\n * Returns the original array if it is null, empty or has only one element. Otherwise, returns a new array containing sorted values\n * in ascending order if asc is true, otherwise in descending order.\n *\n * @param array the input integer array to sort\n * @param asc   true for ascending order, false for descending\n * @return a sorted array as described above\n */\npublic static int[] fastSort(final int[] array, final boolean asc) {\n    if (array == null || array.length < 2) return array;\n    int[] a = new int[array.length];\n    System.arraycopy(array, 0, a, 0, array.length);\n    int[] stack = new int[a.length * 2];\n    int top = 0, left = 0, right = a.length - 1;\n    stack[top++] = left;\n    stack[top++] = right;\n    while (top > 0) {\n        right = stack[--top];\n        left = stack[--top];\n        while (left < right) {\n            int i = left, j = right;\n            int p = a[left + ((right - left) >> 1)];\n            while (i <= j) {\n                if (asc) {\n                    while (a[i] < p) i++;\n                    while (a[j] > p) j--;\n                } else {\n                    while (a[i] > p) i++;\n                    while (a[j] < p) j--;\n                }\n                if (i <= j) {\n                    int t = a[i]; a[i] = a[j]; a[j] = t;\n                    i++; j--;\n                }\n            }\n            if (j - left < right - i) {\n                if (left < j) { stack[top++] = left; stack[top++] = j; }\n                left = i;\n            } else {\n                if (i < right) { stack[top++] = i; stack[top++] = right; }\n                right = j;\n            }\n        }\n    }\n    return a;\n}",
  "sinceUse": 0
}]