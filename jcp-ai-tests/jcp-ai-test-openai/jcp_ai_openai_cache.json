[
  {
    "instant": "2025-09-02T19:52:00.623263434Z",
    "key": "JwczFQkRi2Zg3xhUyf6W/AmYQ5kcV3uURwixbOrhl4LoEObCv8opaLuXOUNjbRhs78yzYjPOca09mfWrmFGRzXVafnmW4+ZJMFHIWynJd+0\u003d",
    "fileName": "ArraySorter.java",
    "line": 6,
    "result": "/**\n * Sorts the given array of ints in ascending or descending order with priority on speed and minimal memory overhead.\n * Returns the same incoming array if it is null, empty, or contains a single element; otherwise returns a new array with sorted values.\n * The implementation uses an optimized Shell sort (Ciura-gap sequence extended dynamically) on a cloned copy of the input.\n *\n * @param array the array to be sorted\n * @param asc true for ascending order, false for descending order\n * @return the same array if null/empty/singleton; otherwise a new sorted array\n */\npublic static int[] fastSort(final int[] array, final boolean asc) {\n    if (array \u003d\u003d null || array.length \u003c\u003d 1) return array;\n    final int n \u003d array.length;\n    final int[] a \u003d array.clone();\n    int[] gaps \u003d new int[16];\n    int m \u003d 0;\n    for (int h \u003d 1; h \u003c n; h \u003d (int)(h * 2.25) + 1) {\n        if (m \u003d\u003d gaps.length) {\n            int[] ng \u003d new int[gaps.length \u003c\u003c 1];\n            java.lang.System.arraycopy(gaps, 0, ng, 0, m);\n            gaps \u003d ng;\n        }\n        gaps[m++] \u003d h;\n    }\n    for (int gi \u003d m - 1; gi \u003e\u003d 0; gi--) {\n        int g \u003d gaps[gi];\n        for (int i \u003d g; i \u003c n; i++) {\n            int v \u003d a[i], j \u003d i;\n            if (asc) {\n                while (j \u003e\u003d g \u0026\u0026 v \u003c a[j - g]) {\n                    a[j] \u003d a[j - g];\n                    j -\u003d g;\n                }\n            } else {\n                while (j \u003e\u003d g \u0026\u0026 v \u003e a[j - g]) {\n                    a[j] \u003d a[j - g];\n                    j -\u003d g;\n                }\n            }\n            a[j] \u003d v;\n        }\n    }\n    return a;\n}",
    "sinceUse": 0
  }
]